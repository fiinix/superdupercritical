---
# Only the main Sass file needs front matter (the dashes are enough)
---
/**
* The siteâ€™s main page-head can have two different states:
*
* 1) Regular page-head with no backgrounds or extra treatments; it just
*    contains the logo and nav.
* 2) A masthead that has a fluid-height (becoming fixed after a certain point)
*    which has a large background image, and some supporting text.
*
* The regular page-head is incredibly simple, but the masthead version has some
* slightly intermingled dependency with the wrapper that lives inside it.
*/
@charset "utf-8";



/*------------------------------------*\
    #Variables
\*------------------------------------*/
$breakpoint-lap:			800;

$serenity:					#92a8d1;
$rose-quartz:				#f7cac9;
$lint:						#b6ba99;
$orchid-haze:				#b0879b;
$fig:						#532d3b;
$thyme:						#50574c;
$volcanic-glass:			#615c60;
$silver-gray:				#c1b7b0;

$bronze:					#d29b6c;

$linen:						#fefbfb;
$thunder:					#3a3639;

$goldenrod:					#ffd700;
$picton-blue:				#55acee;

$bg-color:					$linen;
$copy-color:				$thunder;
$link-color:				$fig;

$primary-color:				$serenity;
$secondary-color:			$rose-quartz;
$tertiary-color:			$volcanic-glass;

$mark-color:				$goldenrod;
$twitter-color:				$picton-blue;

$font-size:					18;
$font-leading:				25.452;
$font-family:				"Georgia", "Times", "Times New Roman", serif;

$heading-family:			"Fira Sans", sans-serif;
$heading-weight:			700;



/*------------------------------------*\
    #Functions
\*------------------------------------*/
@function em($target, $context: 16) {

	@return $target/$context +em

}



@function unitless($target, $context: $font-size) {

	@return $target/$context

}



/*------------------------------------*\
    #Take a svg and make it embeddable in the css (without Base64)
\*------------------------------------*/

// Helper function
// Return null rather than throwing an error if index is outside list range.
@function nth-or-null($list, $index) {
	@return if(length($list) >= $index, nth($list, $index), null);
}

//
//  Function to replace characters in a string
//
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);
	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
        str-replace(str-slice($string, $index +
        str-length($search)), $search, $replace);
	}
	@return $string;
}

//
//  Function to create an optimized svg url
//  (may need a few extra replacements)
//
@function old_svg-url($svg) {
	$svg: str-replace($svg, '"', '\'');
	$svg: str-replace($svg, '<', '%3C');
	$svg: str-replace($svg, '>', '%3E');
	$svg: str-replace($svg, '&', '%26');
	$svg: str-replace($svg, '#', '%23');
	@return url("data:image/svg+xml;charset=utf8,#{$svg}");
}

@function svg-url($svg) {
	//
	// Chunk up string in order to avoid
	// "SystemStackError: stack level too deep"
	//
	$encoded: '';
	$slice: 2000;
	$index: 0;
	$loops: ceil(str-length($svg)/$slice);
	@for $i from 1 through $loops {
		$chunk: str-slice($svg, $index, $index + $slice - 1);
		$chunk: str-replace($chunk, '"', '\'');
		$chunk: str-replace($chunk, '<', '%3C');
		$chunk: str-replace($chunk, '>', '%3E');
		$chunk: str-replace($chunk, '&', '%26');
		$chunk: str-replace($chunk, '#', '%23');
		$encoded: #{$encoded}#{$chunk};
		$index: $index + $slice;
	}
	@return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}



@mixin mq($point, $IE9: false, $query1: min, $query2: width) {
	@if $IE9 == true{
		.lt-ie9 & {
			@content;
		}
		@media screen and (#{$query1}-#{$query2}: em($point)) {
			@content;
		}
	}
	@else {
		@media screen and (#{$query1}-#{$query2}: em($point)) {
			@content;
		}
	}
}

:root {
	--text-color: #3A3639;
	--main-bg-color: #FEFBFB;

	--main-color-silver-gray: #c1b7b0;
	--main-color-serenity: #92a8d1;
	--main-color-rose-quartz: #f7cac9;
	--main-color-lint: #b6ba99;
	--main-color-orchid-haze: #b0879b;
	--main-color-fig: #532d3b;
	--main-color-thyme: #50574c;
	--main-color-volcanic-glass: #615c60;
	--main-color-twitter: #55acee;

	--color-warning: #ffa500;
	--color-sucess: #088a05;
	--color-error: #ee0202;


	--ratio: 1.5;
	--s-5: calc(var(--s-4) / var(--ratio));
	--s-4: calc(var(--s-3) / var(--ratio));
	--s-3: calc(var(--s-2) / var(--ratio));
	--s-2: calc(var(--s-1) / var(--ratio));
	--s-1: calc(var(--s0) / var(--ratio));
	--s0: 1rem;
	--s1: calc(var(--s0) * var(--ratio));
	--s2: calc(var(--s1) * var(--ratio));
	--s3: calc(var(--s2) * var(--ratio));
	--s4: calc(var(--s3) * var(--ratio));
	--s5: calc(var(--s4) * var(--ratio));
}

*:before,*:after {
	box-sizing: inherit;
}

* {
	margin: 0;
	padding: 0;
	box-sizing: inherit;
}

* + * {
	margin-top: var(--s0);
}

* + h1,
* + h2,
* + h3,
* + h4,
* + h5,
* + h6 {
	margin-top: var(--s3);
}

html {
	position: relative;
	box-sizing: border-box;

	overflow-x: hidden;
	scroll-behavior: smooth;
	overflow-y: scroll;
	-webkit-overflow-scrolling: touch;
}

html:before {

	content: " ";
	display: block;
	position: absolute;
	bottom: 0;
	right: 0;
	width: 72.21vw;
	height: 9px;
	background-color: blue;

}

html.has-canon:after {
	pointer-events: none;
	content: " ";
	display: block;
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-image: linear-gradient(90deg, transparent 0%, transparent 50%, rgba(128, 128, 128, 0.05) 50%, rgba(128, 128, 128, 0.05) 100%), linear-gradient(0deg, transparent 0%, transparent 50%, rgba(128, 128, 128, 0.025) 50%, rgba(128, 128, 128, 0.025) 100%);
	background-size: 11.1111vw 11.1111vh, 11.1111vw 11.1111vh;
}

body,
blockquote cite {
	font-size: calc(16px + (20 - 16) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.4;
	font-family: Georgia, Times, "Times New Roman", serif;
	background: var(--main-bg-color);
	color: var(--text-color);
}

.lead, blockquote {
	//font-size: calc(18px + (24 - 18) * ((100vw - 320px) / (1200 - 320)));
	//line-height: 1.2;
}

.lead {
	font-size: calc(18px + (24 - 18) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.2;
	margin-bottom: var(--s3);
}

blockquote {
	margin-top: var(--s3);
	margin-bottom: var(--s3);
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(18px + (24 - 18) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.2;
}

blockquote p {
	position: relative;

	// To allow the linear gradient to wrap each line
	display: inline;
	background: linear-gradient(to bottom, var(--main-color-rose-quartz) 90%, white 90%);
	//box-shadow: 0.25rem 0 0 var(--main-color-rose-quartz), -0.25rem 0 0 var(--main-color-rose-quartz);

}
blockquote p cite {
	font-style: normal;
	-webkit-text-fill-color: var(--text-color);
}
cite:before {
	content: "\2014";
}

blockquote p:before, blockquote p:after {
	//content: " ";
	//display: block;
	//position: absolute;
}

blockquote p:before {
	//background-image: svg-url("<svg width='52' height='32' xmlns='http://www.w3.org/2000/svg'><g fill='#00F' fill-rule='evenodd'><path d='M0 32L16 0l4 8-4 8 8 16H0zM28 32L44 0l4 8-4 8 8 16H28z'/></g></svg>");
	//background-size: em(52) em(32);
	//width: em(52);
	//height: em(32);
	//top: em(- 32);
	//left: em(- 52);
}

//blockquote:nth-of-type(even) p:before {
//	background-image: svg-url("<svg width='52' height='32' xmlns='http://www.w3.org/2000/svg'><g fill='#00F' fill-rule='evenodd'><path d='M52 0L36 32l-4-8 4-8-8-16h24zM24 0L8 32l-4-8 4-8L0 0h24z'/></g></svg>");
//	top: 0;
//	left: 0;
//	right: em(- 52);
//	bottom: em(- 32);
//}
//blockquote:nth-of-type(2) p:after {}

h1, .alpha {
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(25.632px + (81.008 - 25.632) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.05;
}

h2, .beta {
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(22.784px + (54 - 22.784) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.1;
}

.article__content h2,
h3, .gamma {
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(20.256px + (36 - 20.256) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.15;
}

.article__content h3,
h4, .delta {
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(18px + (24 - 18) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.2;
}

.article__content > p:last-of-type {
	position: relative;

	&:after {

		content: " ";
		display: inline-block;
		width: 1ch;
		height: 1ch;
		border-top: 1ch solid;
		border-top-color: blue;
		margin-left: 0.5ch;

	}
}

.wrapper {
	margin: 5.55vh 11.11vw 11.11vh 5.55vw;
	/*margin-left: auto;*/
	/*margin-right: auto;*/
	display: flex;
	justify-content: flex-end;
	flex-flow: column nowrap;

	@include mq(641) {

		max-width: 75vw;
		margin: 11.11vh 22.22vw 22.22vh 11.11vw;
		flex-flow: row wrap;

	}
}

.primary {
	flex: 1 1 auto;

	@include mq(641) {

		margin-left: 1.5em;
		margin-top: 0;
		max-width: 49.99vw;

	}
}

.secondary {
	flex: 1 1 auto;
	align-self: flex-start;

	@include mq(641) {

		position: sticky;
		top: 11.11vh;

	}
}


* + .main {
	//margin-top: 3em;
}

//.first {
//	margin-top: 3em;
//}
//
//.last {
//	margin-bottom: 3em;
//}

a {
	color: blue;

	&:visited {
		color: purple;
	}
	&:hover {
		color: lighten(blue, 15);
	}
	&:active {
		background-color: gold;
	}

}


nav {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;


	@include mq(641) {

		flex-flow: column nowrap;
		align-items: flex-start;

	}
}
nav a {
	display: inline-block;
	//font-size: calc(14px + (16 - 14) * ((100vw - 320px) / (1200 - 320)));
	font-size: calc(16px + (20 - 16) * ((100vw - 320px) / (1200 - 320)));
	margin-right: 1em;
	margin-top: 0;

	@include mq(641) {

		margin-top: 0.5em;
		margin-right: 0;

		&:first-child {
			margin-top: 0;
			margin-bottom: 3em;
		}

	}
}

.bullet-list,
.article__content ul {

	margin-top: var(--s3);
	margin-bottom: var(--s3);
	padding-left: var(--s3);
	list-style: none;

	li {

		position: relative;

	}

	li:before {

		content: " ";
		display: block;
		width: 0;
		height: 0;

		border-top: 6px solid transparent;
		border-bottom: 6px solid transparent;

		border-left: #{((6 + 6) * 0.866 + 0px)} solid var(--text-color);

		position: absolute;
		top: 0.75em;
		transform: translate(calc(#{var(--s3)} * -1), -50%);

	}

}


a[href*="http"]:after {
	content: "\2B08";
	display: inline-block;
	margin-left: 0.125em;
	position: relative;
	top: -0.1em;
}

picture {
	display: block;
	overflow: hidden;
}

figure {
	width: auto;
	margin-top: var(--s3);
	margin-bottom: var(--s3);
	//margin-right: -22.22vw;
	margin-left: -5.55vw;
	margin-right: -11.11vw;

	svg, img {
		width: 100%;
	}

	img {
		vertical-align: middle;
	}

	@include mq(641) {
		margin-left: 0;
	}
}

figcaption {
	position: relative;
	margin-left: 5.55vw;
	margin-right: 11.11vw;
	font-size: calc(14px + (16 - 14) * ((100vw - 320px) / (1200 - 320)));

	@include mq(641) {

		margin-left: 0;
		margin-right: auto;
		max-width: 49.99vw;

	}
}




.field-group {
	max-width: 32em;
}
.field-label {
	display: block;
}
input {

	padding: 0.75em 1.5em;
	background: white;
	border: 2px solid var(--text-color);

}
input,
button {

	font-family: inherit;
	font-size: 100%;
	line-height: 1.15;
	margin-left: 0;
	margin-right: 0;

}

@keyframes dash {

	to {
		stroke-dashoffset: 0;
	}
}

button {
	font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 500;
	font-size: calc(18px + (24 - 18) * ((100vw - 320px) / (1200 - 320)));
	line-height: 1.2;
	padding: 0.6em 1.8em 0.6em 1.2em;
	background-color: blue;
	color: white;
	border: 2px solid transparent;
	//transform: skew(27deg);
	//
	clip-path: polygon(calc(100% - 31px) 0, 100% 100%, 0% 100%, 0% 0%);
	//letter-spacing: 0.01em; // white-on-dark has less affordance

	position: relative;
	//top: (2+3) + 0px; // input border + offset
	//left: -(2+3) + 0px; // input border + offset
	transform: translate(-5px, 5px);

	transition: all 200ms ease-in-out 0ms;

	&:before {

		//content: " ";
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 0;
		padding-right: 100%;
		background-color: red;
		transform: skew(27deg);

	}

	&:hover,
	&:focus {

		background-color: lighten(blue, 15);
		//transform: translate(0, 0);

	}

	&.error {

		background-color: #FF4136;
		color: var(--text-color);

	}

	&.success {
		background-color: #2ECC40;
		color: var(--text-color);
	}

	&.busy .icon {
		stroke-dasharray: 60;
		stroke-dashoffset: 120;
		animation: dash 1s linear infinite;
	}
}

.field-group--abreasted {
	width: 100%;
	display: flex;
	flex-flow: row nowrap;
}
.field-group--abreasted input {
	margin-top: 0;
	width: 100%;
	flex: 1 0 0%;
}
.field-group--abreasted .field-group {
	margin-top: 0;
	flex: 0 1 auto;
}

.post-list {

	padding-left: 0;
	list-style: none;

	li + li {
		margin-top: var(--s3);
	}

}


* + .email {
	margin-top: 4.5rem;
}


.visuallyhidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap; /* 1 */
}
